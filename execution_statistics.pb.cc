// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: execution_statistics.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "execution_statistics.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace tools {
namespace protos {

namespace {

const ::google::protobuf::Descriptor* ResourceUsage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResourceUsage_reflection_ = NULL;
const ::google::protobuf::Descriptor* ExecutionStatistics_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExecutionStatistics_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_execution_5fstatistics_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_execution_5fstatistics_2eproto() {
  protobuf_AddDesc_execution_5fstatistics_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "execution_statistics.proto");
  GOOGLE_CHECK(file != NULL);
  ResourceUsage_descriptor_ = file->message_type(0);
  static const int ResourceUsage_offsets_[18] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceUsage, utime_sec_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceUsage, utime_usec_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceUsage, stime_sec_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceUsage, stime_usec_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceUsage, maxrss_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceUsage, ixrss_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceUsage, idrss_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceUsage, isrss_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceUsage, minflt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceUsage, majflt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceUsage, nswap_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceUsage, inblock_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceUsage, oublock_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceUsage, msgsnd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceUsage, msgrcv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceUsage, nsignals_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceUsage, nvcsw_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceUsage, nivcsw_),
  };
  ResourceUsage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ResourceUsage_descriptor_,
      ResourceUsage::default_instance_,
      ResourceUsage_offsets_,
      -1,
      -1,
      -1,
      sizeof(ResourceUsage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceUsage, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceUsage, _is_default_instance_));
  ExecutionStatistics_descriptor_ = file->message_type(1);
  static const int ExecutionStatistics_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecutionStatistics, resource_usage_),
  };
  ExecutionStatistics_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ExecutionStatistics_descriptor_,
      ExecutionStatistics::default_instance_,
      ExecutionStatistics_offsets_,
      -1,
      -1,
      -1,
      sizeof(ExecutionStatistics),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecutionStatistics, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecutionStatistics, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_execution_5fstatistics_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ResourceUsage_descriptor_, &ResourceUsage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ExecutionStatistics_descriptor_, &ExecutionStatistics::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_execution_5fstatistics_2eproto() {
  delete ResourceUsage::default_instance_;
  delete ResourceUsage_reflection_;
  delete ExecutionStatistics::default_instance_;
  delete ExecutionStatistics_reflection_;
}

void protobuf_AddDesc_execution_5fstatistics_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_execution_5fstatistics_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\032execution_statistics.proto\022\014tools.prot"
    "os\"\274\002\n\rResourceUsage\022\021\n\tutime_sec\030\001 \001(\003\022"
    "\022\n\nutime_usec\030\002 \001(\003\022\021\n\tstime_sec\030\003 \001(\003\022\022"
    "\n\nstime_usec\030\004 \001(\003\022\016\n\006maxrss\030\005 \001(\003\022\r\n\005ix"
    "rss\030\006 \001(\003\022\r\n\005idrss\030\007 \001(\003\022\r\n\005isrss\030\010 \001(\003\022"
    "\016\n\006minflt\030\t \001(\003\022\016\n\006majflt\030\n \001(\003\022\r\n\005nswap"
    "\030\013 \001(\003\022\017\n\007inblock\030\014 \001(\003\022\017\n\007oublock\030\r \001(\003"
    "\022\016\n\006msgsnd\030\016 \001(\003\022\016\n\006msgrcv\030\017 \001(\003\022\020\n\010nsig"
    "nals\030\020 \001(\003\022\r\n\005nvcsw\030\021 \001(\003\022\016\n\006nivcsw\030\022 \001("
    "\003\"J\n\023ExecutionStatistics\0223\n\016resource_usa"
    "ge\030\001 \001(\0132\033.tools.protos.ResourceUsageB-\n"
    "#com.google.devtools.build.lib.shellB\006Pr"
    "otosb\006proto3", 492);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "execution_statistics.proto", &protobuf_RegisterTypes);
  ResourceUsage::default_instance_ = new ResourceUsage();
  ExecutionStatistics::default_instance_ = new ExecutionStatistics();
  ResourceUsage::default_instance_->InitAsDefaultInstance();
  ExecutionStatistics::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_execution_5fstatistics_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_execution_5fstatistics_2eproto {
  StaticDescriptorInitializer_execution_5fstatistics_2eproto() {
    protobuf_AddDesc_execution_5fstatistics_2eproto();
  }
} static_descriptor_initializer_execution_5fstatistics_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResourceUsage::kUtimeSecFieldNumber;
const int ResourceUsage::kUtimeUsecFieldNumber;
const int ResourceUsage::kStimeSecFieldNumber;
const int ResourceUsage::kStimeUsecFieldNumber;
const int ResourceUsage::kMaxrssFieldNumber;
const int ResourceUsage::kIxrssFieldNumber;
const int ResourceUsage::kIdrssFieldNumber;
const int ResourceUsage::kIsrssFieldNumber;
const int ResourceUsage::kMinfltFieldNumber;
const int ResourceUsage::kMajfltFieldNumber;
const int ResourceUsage::kNswapFieldNumber;
const int ResourceUsage::kInblockFieldNumber;
const int ResourceUsage::kOublockFieldNumber;
const int ResourceUsage::kMsgsndFieldNumber;
const int ResourceUsage::kMsgrcvFieldNumber;
const int ResourceUsage::kNsignalsFieldNumber;
const int ResourceUsage::kNvcswFieldNumber;
const int ResourceUsage::kNivcswFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResourceUsage::ResourceUsage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tools.protos.ResourceUsage)
}

void ResourceUsage::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ResourceUsage::ResourceUsage(const ResourceUsage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tools.protos.ResourceUsage)
}

void ResourceUsage::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  utime_sec_ = GOOGLE_LONGLONG(0);
  utime_usec_ = GOOGLE_LONGLONG(0);
  stime_sec_ = GOOGLE_LONGLONG(0);
  stime_usec_ = GOOGLE_LONGLONG(0);
  maxrss_ = GOOGLE_LONGLONG(0);
  ixrss_ = GOOGLE_LONGLONG(0);
  idrss_ = GOOGLE_LONGLONG(0);
  isrss_ = GOOGLE_LONGLONG(0);
  minflt_ = GOOGLE_LONGLONG(0);
  majflt_ = GOOGLE_LONGLONG(0);
  nswap_ = GOOGLE_LONGLONG(0);
  inblock_ = GOOGLE_LONGLONG(0);
  oublock_ = GOOGLE_LONGLONG(0);
  msgsnd_ = GOOGLE_LONGLONG(0);
  msgrcv_ = GOOGLE_LONGLONG(0);
  nsignals_ = GOOGLE_LONGLONG(0);
  nvcsw_ = GOOGLE_LONGLONG(0);
  nivcsw_ = GOOGLE_LONGLONG(0);
}

ResourceUsage::~ResourceUsage() {
  // @@protoc_insertion_point(destructor:tools.protos.ResourceUsage)
  SharedDtor();
}

void ResourceUsage::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ResourceUsage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResourceUsage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResourceUsage_descriptor_;
}

const ResourceUsage& ResourceUsage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_execution_5fstatistics_2eproto();
  return *default_instance_;
}

ResourceUsage* ResourceUsage::default_instance_ = NULL;

ResourceUsage* ResourceUsage::New(::google::protobuf::Arena* arena) const {
  ResourceUsage* n = new ResourceUsage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResourceUsage::Clear() {
// @@protoc_insertion_point(message_clear_start:tools.protos.ResourceUsage)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ResourceUsage, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ResourceUsage*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(utime_sec_, isrss_);
  ZR_(minflt_, nsignals_);
  ZR_(nvcsw_, nivcsw_);

#undef ZR_HELPER_
#undef ZR_

}

bool ResourceUsage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tools.protos.ResourceUsage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 utime_sec = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &utime_sec_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_utime_usec;
        break;
      }

      // optional int64 utime_usec = 2;
      case 2: {
        if (tag == 16) {
         parse_utime_usec:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &utime_usec_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_stime_sec;
        break;
      }

      // optional int64 stime_sec = 3;
      case 3: {
        if (tag == 24) {
         parse_stime_sec:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &stime_sec_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_stime_usec;
        break;
      }

      // optional int64 stime_usec = 4;
      case 4: {
        if (tag == 32) {
         parse_stime_usec:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &stime_usec_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_maxrss;
        break;
      }

      // optional int64 maxrss = 5;
      case 5: {
        if (tag == 40) {
         parse_maxrss:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &maxrss_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_ixrss;
        break;
      }

      // optional int64 ixrss = 6;
      case 6: {
        if (tag == 48) {
         parse_ixrss:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ixrss_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_idrss;
        break;
      }

      // optional int64 idrss = 7;
      case 7: {
        if (tag == 56) {
         parse_idrss:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &idrss_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_isrss;
        break;
      }

      // optional int64 isrss = 8;
      case 8: {
        if (tag == 64) {
         parse_isrss:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &isrss_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_minflt;
        break;
      }

      // optional int64 minflt = 9;
      case 9: {
        if (tag == 72) {
         parse_minflt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &minflt_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_majflt;
        break;
      }

      // optional int64 majflt = 10;
      case 10: {
        if (tag == 80) {
         parse_majflt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &majflt_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_nswap;
        break;
      }

      // optional int64 nswap = 11;
      case 11: {
        if (tag == 88) {
         parse_nswap:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &nswap_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_inblock;
        break;
      }

      // optional int64 inblock = 12;
      case 12: {
        if (tag == 96) {
         parse_inblock:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &inblock_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_oublock;
        break;
      }

      // optional int64 oublock = 13;
      case 13: {
        if (tag == 104) {
         parse_oublock:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &oublock_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_msgsnd;
        break;
      }

      // optional int64 msgsnd = 14;
      case 14: {
        if (tag == 112) {
         parse_msgsnd:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &msgsnd_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_msgrcv;
        break;
      }

      // optional int64 msgrcv = 15;
      case 15: {
        if (tag == 120) {
         parse_msgrcv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &msgrcv_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_nsignals;
        break;
      }

      // optional int64 nsignals = 16;
      case 16: {
        if (tag == 128) {
         parse_nsignals:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &nsignals_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_nvcsw;
        break;
      }

      // optional int64 nvcsw = 17;
      case 17: {
        if (tag == 136) {
         parse_nvcsw:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &nvcsw_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(144)) goto parse_nivcsw;
        break;
      }

      // optional int64 nivcsw = 18;
      case 18: {
        if (tag == 144) {
         parse_nivcsw:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &nivcsw_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tools.protos.ResourceUsage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tools.protos.ResourceUsage)
  return false;
#undef DO_
}

void ResourceUsage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tools.protos.ResourceUsage)
  // optional int64 utime_sec = 1;
  if (this->utime_sec() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->utime_sec(), output);
  }

  // optional int64 utime_usec = 2;
  if (this->utime_usec() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->utime_usec(), output);
  }

  // optional int64 stime_sec = 3;
  if (this->stime_sec() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->stime_sec(), output);
  }

  // optional int64 stime_usec = 4;
  if (this->stime_usec() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->stime_usec(), output);
  }

  // optional int64 maxrss = 5;
  if (this->maxrss() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->maxrss(), output);
  }

  // optional int64 ixrss = 6;
  if (this->ixrss() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->ixrss(), output);
  }

  // optional int64 idrss = 7;
  if (this->idrss() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->idrss(), output);
  }

  // optional int64 isrss = 8;
  if (this->isrss() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->isrss(), output);
  }

  // optional int64 minflt = 9;
  if (this->minflt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->minflt(), output);
  }

  // optional int64 majflt = 10;
  if (this->majflt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10, this->majflt(), output);
  }

  // optional int64 nswap = 11;
  if (this->nswap() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(11, this->nswap(), output);
  }

  // optional int64 inblock = 12;
  if (this->inblock() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(12, this->inblock(), output);
  }

  // optional int64 oublock = 13;
  if (this->oublock() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(13, this->oublock(), output);
  }

  // optional int64 msgsnd = 14;
  if (this->msgsnd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(14, this->msgsnd(), output);
  }

  // optional int64 msgrcv = 15;
  if (this->msgrcv() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(15, this->msgrcv(), output);
  }

  // optional int64 nsignals = 16;
  if (this->nsignals() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(16, this->nsignals(), output);
  }

  // optional int64 nvcsw = 17;
  if (this->nvcsw() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(17, this->nvcsw(), output);
  }

  // optional int64 nivcsw = 18;
  if (this->nivcsw() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(18, this->nivcsw(), output);
  }

  // @@protoc_insertion_point(serialize_end:tools.protos.ResourceUsage)
}

::google::protobuf::uint8* ResourceUsage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tools.protos.ResourceUsage)
  // optional int64 utime_sec = 1;
  if (this->utime_sec() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->utime_sec(), target);
  }

  // optional int64 utime_usec = 2;
  if (this->utime_usec() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->utime_usec(), target);
  }

  // optional int64 stime_sec = 3;
  if (this->stime_sec() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->stime_sec(), target);
  }

  // optional int64 stime_usec = 4;
  if (this->stime_usec() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->stime_usec(), target);
  }

  // optional int64 maxrss = 5;
  if (this->maxrss() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->maxrss(), target);
  }

  // optional int64 ixrss = 6;
  if (this->ixrss() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->ixrss(), target);
  }

  // optional int64 idrss = 7;
  if (this->idrss() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->idrss(), target);
  }

  // optional int64 isrss = 8;
  if (this->isrss() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->isrss(), target);
  }

  // optional int64 minflt = 9;
  if (this->minflt() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->minflt(), target);
  }

  // optional int64 majflt = 10;
  if (this->majflt() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(10, this->majflt(), target);
  }

  // optional int64 nswap = 11;
  if (this->nswap() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(11, this->nswap(), target);
  }

  // optional int64 inblock = 12;
  if (this->inblock() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(12, this->inblock(), target);
  }

  // optional int64 oublock = 13;
  if (this->oublock() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(13, this->oublock(), target);
  }

  // optional int64 msgsnd = 14;
  if (this->msgsnd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(14, this->msgsnd(), target);
  }

  // optional int64 msgrcv = 15;
  if (this->msgrcv() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(15, this->msgrcv(), target);
  }

  // optional int64 nsignals = 16;
  if (this->nsignals() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(16, this->nsignals(), target);
  }

  // optional int64 nvcsw = 17;
  if (this->nvcsw() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(17, this->nvcsw(), target);
  }

  // optional int64 nivcsw = 18;
  if (this->nivcsw() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(18, this->nivcsw(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tools.protos.ResourceUsage)
  return target;
}

int ResourceUsage::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tools.protos.ResourceUsage)
  int total_size = 0;

  // optional int64 utime_sec = 1;
  if (this->utime_sec() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->utime_sec());
  }

  // optional int64 utime_usec = 2;
  if (this->utime_usec() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->utime_usec());
  }

  // optional int64 stime_sec = 3;
  if (this->stime_sec() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->stime_sec());
  }

  // optional int64 stime_usec = 4;
  if (this->stime_usec() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->stime_usec());
  }

  // optional int64 maxrss = 5;
  if (this->maxrss() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->maxrss());
  }

  // optional int64 ixrss = 6;
  if (this->ixrss() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ixrss());
  }

  // optional int64 idrss = 7;
  if (this->idrss() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->idrss());
  }

  // optional int64 isrss = 8;
  if (this->isrss() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->isrss());
  }

  // optional int64 minflt = 9;
  if (this->minflt() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->minflt());
  }

  // optional int64 majflt = 10;
  if (this->majflt() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->majflt());
  }

  // optional int64 nswap = 11;
  if (this->nswap() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->nswap());
  }

  // optional int64 inblock = 12;
  if (this->inblock() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->inblock());
  }

  // optional int64 oublock = 13;
  if (this->oublock() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->oublock());
  }

  // optional int64 msgsnd = 14;
  if (this->msgsnd() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->msgsnd());
  }

  // optional int64 msgrcv = 15;
  if (this->msgrcv() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->msgrcv());
  }

  // optional int64 nsignals = 16;
  if (this->nsignals() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->nsignals());
  }

  // optional int64 nvcsw = 17;
  if (this->nvcsw() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->nvcsw());
  }

  // optional int64 nivcsw = 18;
  if (this->nivcsw() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->nivcsw());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResourceUsage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tools.protos.ResourceUsage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ResourceUsage* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ResourceUsage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tools.protos.ResourceUsage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tools.protos.ResourceUsage)
    MergeFrom(*source);
  }
}

void ResourceUsage::MergeFrom(const ResourceUsage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tools.protos.ResourceUsage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.utime_sec() != 0) {
    set_utime_sec(from.utime_sec());
  }
  if (from.utime_usec() != 0) {
    set_utime_usec(from.utime_usec());
  }
  if (from.stime_sec() != 0) {
    set_stime_sec(from.stime_sec());
  }
  if (from.stime_usec() != 0) {
    set_stime_usec(from.stime_usec());
  }
  if (from.maxrss() != 0) {
    set_maxrss(from.maxrss());
  }
  if (from.ixrss() != 0) {
    set_ixrss(from.ixrss());
  }
  if (from.idrss() != 0) {
    set_idrss(from.idrss());
  }
  if (from.isrss() != 0) {
    set_isrss(from.isrss());
  }
  if (from.minflt() != 0) {
    set_minflt(from.minflt());
  }
  if (from.majflt() != 0) {
    set_majflt(from.majflt());
  }
  if (from.nswap() != 0) {
    set_nswap(from.nswap());
  }
  if (from.inblock() != 0) {
    set_inblock(from.inblock());
  }
  if (from.oublock() != 0) {
    set_oublock(from.oublock());
  }
  if (from.msgsnd() != 0) {
    set_msgsnd(from.msgsnd());
  }
  if (from.msgrcv() != 0) {
    set_msgrcv(from.msgrcv());
  }
  if (from.nsignals() != 0) {
    set_nsignals(from.nsignals());
  }
  if (from.nvcsw() != 0) {
    set_nvcsw(from.nvcsw());
  }
  if (from.nivcsw() != 0) {
    set_nivcsw(from.nivcsw());
  }
}

void ResourceUsage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tools.protos.ResourceUsage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResourceUsage::CopyFrom(const ResourceUsage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tools.protos.ResourceUsage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResourceUsage::IsInitialized() const {

  return true;
}

void ResourceUsage::Swap(ResourceUsage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResourceUsage::InternalSwap(ResourceUsage* other) {
  std::swap(utime_sec_, other->utime_sec_);
  std::swap(utime_usec_, other->utime_usec_);
  std::swap(stime_sec_, other->stime_sec_);
  std::swap(stime_usec_, other->stime_usec_);
  std::swap(maxrss_, other->maxrss_);
  std::swap(ixrss_, other->ixrss_);
  std::swap(idrss_, other->idrss_);
  std::swap(isrss_, other->isrss_);
  std::swap(minflt_, other->minflt_);
  std::swap(majflt_, other->majflt_);
  std::swap(nswap_, other->nswap_);
  std::swap(inblock_, other->inblock_);
  std::swap(oublock_, other->oublock_);
  std::swap(msgsnd_, other->msgsnd_);
  std::swap(msgrcv_, other->msgrcv_);
  std::swap(nsignals_, other->nsignals_);
  std::swap(nvcsw_, other->nvcsw_);
  std::swap(nivcsw_, other->nivcsw_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResourceUsage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResourceUsage_descriptor_;
  metadata.reflection = ResourceUsage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResourceUsage

// optional int64 utime_sec = 1;
void ResourceUsage::clear_utime_sec() {
  utime_sec_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 ResourceUsage::utime_sec() const {
  // @@protoc_insertion_point(field_get:tools.protos.ResourceUsage.utime_sec)
  return utime_sec_;
}
 void ResourceUsage::set_utime_sec(::google::protobuf::int64 value) {
  
  utime_sec_ = value;
  // @@protoc_insertion_point(field_set:tools.protos.ResourceUsage.utime_sec)
}

// optional int64 utime_usec = 2;
void ResourceUsage::clear_utime_usec() {
  utime_usec_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 ResourceUsage::utime_usec() const {
  // @@protoc_insertion_point(field_get:tools.protos.ResourceUsage.utime_usec)
  return utime_usec_;
}
 void ResourceUsage::set_utime_usec(::google::protobuf::int64 value) {
  
  utime_usec_ = value;
  // @@protoc_insertion_point(field_set:tools.protos.ResourceUsage.utime_usec)
}

// optional int64 stime_sec = 3;
void ResourceUsage::clear_stime_sec() {
  stime_sec_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 ResourceUsage::stime_sec() const {
  // @@protoc_insertion_point(field_get:tools.protos.ResourceUsage.stime_sec)
  return stime_sec_;
}
 void ResourceUsage::set_stime_sec(::google::protobuf::int64 value) {
  
  stime_sec_ = value;
  // @@protoc_insertion_point(field_set:tools.protos.ResourceUsage.stime_sec)
}

// optional int64 stime_usec = 4;
void ResourceUsage::clear_stime_usec() {
  stime_usec_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 ResourceUsage::stime_usec() const {
  // @@protoc_insertion_point(field_get:tools.protos.ResourceUsage.stime_usec)
  return stime_usec_;
}
 void ResourceUsage::set_stime_usec(::google::protobuf::int64 value) {
  
  stime_usec_ = value;
  // @@protoc_insertion_point(field_set:tools.protos.ResourceUsage.stime_usec)
}

// optional int64 maxrss = 5;
void ResourceUsage::clear_maxrss() {
  maxrss_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 ResourceUsage::maxrss() const {
  // @@protoc_insertion_point(field_get:tools.protos.ResourceUsage.maxrss)
  return maxrss_;
}
 void ResourceUsage::set_maxrss(::google::protobuf::int64 value) {
  
  maxrss_ = value;
  // @@protoc_insertion_point(field_set:tools.protos.ResourceUsage.maxrss)
}

// optional int64 ixrss = 6;
void ResourceUsage::clear_ixrss() {
  ixrss_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 ResourceUsage::ixrss() const {
  // @@protoc_insertion_point(field_get:tools.protos.ResourceUsage.ixrss)
  return ixrss_;
}
 void ResourceUsage::set_ixrss(::google::protobuf::int64 value) {
  
  ixrss_ = value;
  // @@protoc_insertion_point(field_set:tools.protos.ResourceUsage.ixrss)
}

// optional int64 idrss = 7;
void ResourceUsage::clear_idrss() {
  idrss_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 ResourceUsage::idrss() const {
  // @@protoc_insertion_point(field_get:tools.protos.ResourceUsage.idrss)
  return idrss_;
}
 void ResourceUsage::set_idrss(::google::protobuf::int64 value) {
  
  idrss_ = value;
  // @@protoc_insertion_point(field_set:tools.protos.ResourceUsage.idrss)
}

// optional int64 isrss = 8;
void ResourceUsage::clear_isrss() {
  isrss_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 ResourceUsage::isrss() const {
  // @@protoc_insertion_point(field_get:tools.protos.ResourceUsage.isrss)
  return isrss_;
}
 void ResourceUsage::set_isrss(::google::protobuf::int64 value) {
  
  isrss_ = value;
  // @@protoc_insertion_point(field_set:tools.protos.ResourceUsage.isrss)
}

// optional int64 minflt = 9;
void ResourceUsage::clear_minflt() {
  minflt_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 ResourceUsage::minflt() const {
  // @@protoc_insertion_point(field_get:tools.protos.ResourceUsage.minflt)
  return minflt_;
}
 void ResourceUsage::set_minflt(::google::protobuf::int64 value) {
  
  minflt_ = value;
  // @@protoc_insertion_point(field_set:tools.protos.ResourceUsage.minflt)
}

// optional int64 majflt = 10;
void ResourceUsage::clear_majflt() {
  majflt_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 ResourceUsage::majflt() const {
  // @@protoc_insertion_point(field_get:tools.protos.ResourceUsage.majflt)
  return majflt_;
}
 void ResourceUsage::set_majflt(::google::protobuf::int64 value) {
  
  majflt_ = value;
  // @@protoc_insertion_point(field_set:tools.protos.ResourceUsage.majflt)
}

// optional int64 nswap = 11;
void ResourceUsage::clear_nswap() {
  nswap_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 ResourceUsage::nswap() const {
  // @@protoc_insertion_point(field_get:tools.protos.ResourceUsage.nswap)
  return nswap_;
}
 void ResourceUsage::set_nswap(::google::protobuf::int64 value) {
  
  nswap_ = value;
  // @@protoc_insertion_point(field_set:tools.protos.ResourceUsage.nswap)
}

// optional int64 inblock = 12;
void ResourceUsage::clear_inblock() {
  inblock_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 ResourceUsage::inblock() const {
  // @@protoc_insertion_point(field_get:tools.protos.ResourceUsage.inblock)
  return inblock_;
}
 void ResourceUsage::set_inblock(::google::protobuf::int64 value) {
  
  inblock_ = value;
  // @@protoc_insertion_point(field_set:tools.protos.ResourceUsage.inblock)
}

// optional int64 oublock = 13;
void ResourceUsage::clear_oublock() {
  oublock_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 ResourceUsage::oublock() const {
  // @@protoc_insertion_point(field_get:tools.protos.ResourceUsage.oublock)
  return oublock_;
}
 void ResourceUsage::set_oublock(::google::protobuf::int64 value) {
  
  oublock_ = value;
  // @@protoc_insertion_point(field_set:tools.protos.ResourceUsage.oublock)
}

// optional int64 msgsnd = 14;
void ResourceUsage::clear_msgsnd() {
  msgsnd_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 ResourceUsage::msgsnd() const {
  // @@protoc_insertion_point(field_get:tools.protos.ResourceUsage.msgsnd)
  return msgsnd_;
}
 void ResourceUsage::set_msgsnd(::google::protobuf::int64 value) {
  
  msgsnd_ = value;
  // @@protoc_insertion_point(field_set:tools.protos.ResourceUsage.msgsnd)
}

// optional int64 msgrcv = 15;
void ResourceUsage::clear_msgrcv() {
  msgrcv_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 ResourceUsage::msgrcv() const {
  // @@protoc_insertion_point(field_get:tools.protos.ResourceUsage.msgrcv)
  return msgrcv_;
}
 void ResourceUsage::set_msgrcv(::google::protobuf::int64 value) {
  
  msgrcv_ = value;
  // @@protoc_insertion_point(field_set:tools.protos.ResourceUsage.msgrcv)
}

// optional int64 nsignals = 16;
void ResourceUsage::clear_nsignals() {
  nsignals_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 ResourceUsage::nsignals() const {
  // @@protoc_insertion_point(field_get:tools.protos.ResourceUsage.nsignals)
  return nsignals_;
}
 void ResourceUsage::set_nsignals(::google::protobuf::int64 value) {
  
  nsignals_ = value;
  // @@protoc_insertion_point(field_set:tools.protos.ResourceUsage.nsignals)
}

// optional int64 nvcsw = 17;
void ResourceUsage::clear_nvcsw() {
  nvcsw_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 ResourceUsage::nvcsw() const {
  // @@protoc_insertion_point(field_get:tools.protos.ResourceUsage.nvcsw)
  return nvcsw_;
}
 void ResourceUsage::set_nvcsw(::google::protobuf::int64 value) {
  
  nvcsw_ = value;
  // @@protoc_insertion_point(field_set:tools.protos.ResourceUsage.nvcsw)
}

// optional int64 nivcsw = 18;
void ResourceUsage::clear_nivcsw() {
  nivcsw_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 ResourceUsage::nivcsw() const {
  // @@protoc_insertion_point(field_get:tools.protos.ResourceUsage.nivcsw)
  return nivcsw_;
}
 void ResourceUsage::set_nivcsw(::google::protobuf::int64 value) {
  
  nivcsw_ = value;
  // @@protoc_insertion_point(field_set:tools.protos.ResourceUsage.nivcsw)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExecutionStatistics::kResourceUsageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExecutionStatistics::ExecutionStatistics()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tools.protos.ExecutionStatistics)
}

void ExecutionStatistics::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  resource_usage_ = const_cast< ::tools::protos::ResourceUsage*>(&::tools::protos::ResourceUsage::default_instance());
}

ExecutionStatistics::ExecutionStatistics(const ExecutionStatistics& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tools.protos.ExecutionStatistics)
}

void ExecutionStatistics::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  resource_usage_ = NULL;
}

ExecutionStatistics::~ExecutionStatistics() {
  // @@protoc_insertion_point(destructor:tools.protos.ExecutionStatistics)
  SharedDtor();
}

void ExecutionStatistics::SharedDtor() {
  if (this != default_instance_) {
    delete resource_usage_;
  }
}

void ExecutionStatistics::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExecutionStatistics::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExecutionStatistics_descriptor_;
}

const ExecutionStatistics& ExecutionStatistics::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_execution_5fstatistics_2eproto();
  return *default_instance_;
}

ExecutionStatistics* ExecutionStatistics::default_instance_ = NULL;

ExecutionStatistics* ExecutionStatistics::New(::google::protobuf::Arena* arena) const {
  ExecutionStatistics* n = new ExecutionStatistics;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExecutionStatistics::Clear() {
// @@protoc_insertion_point(message_clear_start:tools.protos.ExecutionStatistics)
  if (GetArenaNoVirtual() == NULL && resource_usage_ != NULL) delete resource_usage_;
  resource_usage_ = NULL;
}

bool ExecutionStatistics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tools.protos.ExecutionStatistics)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .tools.protos.ResourceUsage resource_usage = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_resource_usage()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tools.protos.ExecutionStatistics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tools.protos.ExecutionStatistics)
  return false;
#undef DO_
}

void ExecutionStatistics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tools.protos.ExecutionStatistics)
  // optional .tools.protos.ResourceUsage resource_usage = 1;
  if (this->has_resource_usage()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->resource_usage_, output);
  }

  // @@protoc_insertion_point(serialize_end:tools.protos.ExecutionStatistics)
}

::google::protobuf::uint8* ExecutionStatistics::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tools.protos.ExecutionStatistics)
  // optional .tools.protos.ResourceUsage resource_usage = 1;
  if (this->has_resource_usage()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->resource_usage_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tools.protos.ExecutionStatistics)
  return target;
}

int ExecutionStatistics::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tools.protos.ExecutionStatistics)
  int total_size = 0;

  // optional .tools.protos.ResourceUsage resource_usage = 1;
  if (this->has_resource_usage()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->resource_usage_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExecutionStatistics::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tools.protos.ExecutionStatistics)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ExecutionStatistics* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ExecutionStatistics>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tools.protos.ExecutionStatistics)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tools.protos.ExecutionStatistics)
    MergeFrom(*source);
  }
}

void ExecutionStatistics::MergeFrom(const ExecutionStatistics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tools.protos.ExecutionStatistics)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_resource_usage()) {
    mutable_resource_usage()->::tools::protos::ResourceUsage::MergeFrom(from.resource_usage());
  }
}

void ExecutionStatistics::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tools.protos.ExecutionStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecutionStatistics::CopyFrom(const ExecutionStatistics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tools.protos.ExecutionStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecutionStatistics::IsInitialized() const {

  return true;
}

void ExecutionStatistics::Swap(ExecutionStatistics* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExecutionStatistics::InternalSwap(ExecutionStatistics* other) {
  std::swap(resource_usage_, other->resource_usage_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExecutionStatistics::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExecutionStatistics_descriptor_;
  metadata.reflection = ExecutionStatistics_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ExecutionStatistics

// optional .tools.protos.ResourceUsage resource_usage = 1;
bool ExecutionStatistics::has_resource_usage() const {
  return !_is_default_instance_ && resource_usage_ != NULL;
}
void ExecutionStatistics::clear_resource_usage() {
  if (GetArenaNoVirtual() == NULL && resource_usage_ != NULL) delete resource_usage_;
  resource_usage_ = NULL;
}
const ::tools::protos::ResourceUsage& ExecutionStatistics::resource_usage() const {
  // @@protoc_insertion_point(field_get:tools.protos.ExecutionStatistics.resource_usage)
  return resource_usage_ != NULL ? *resource_usage_ : *default_instance_->resource_usage_;
}
::tools::protos::ResourceUsage* ExecutionStatistics::mutable_resource_usage() {
  
  if (resource_usage_ == NULL) {
    resource_usage_ = new ::tools::protos::ResourceUsage;
  }
  // @@protoc_insertion_point(field_mutable:tools.protos.ExecutionStatistics.resource_usage)
  return resource_usage_;
}
::tools::protos::ResourceUsage* ExecutionStatistics::release_resource_usage() {
  // @@protoc_insertion_point(field_release:tools.protos.ExecutionStatistics.resource_usage)
  
  ::tools::protos::ResourceUsage* temp = resource_usage_;
  resource_usage_ = NULL;
  return temp;
}
void ExecutionStatistics::set_allocated_resource_usage(::tools::protos::ResourceUsage* resource_usage) {
  delete resource_usage_;
  resource_usage_ = resource_usage;
  if (resource_usage) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tools.protos.ExecutionStatistics.resource_usage)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace protos
}  // namespace tools

// @@protoc_insertion_point(global_scope)
